{"ast":null,"code":"class HotPotatoGame {\n  constructor(canvasId, gameState, updateScore, hotPotatoes, teamStats, currentUser, onTaskClick, onTaskComplete) {\n    this.canvas = document.getElementById(canvasId);\n    if (!this.canvas) {\n      console.error('Canvas element not found');\n      return;\n    }\n    this.ctx = this.canvas.getContext('2d');\n    this.gameState = gameState;\n    this.updateScore = updateScore;\n    this.hotPotatoes = hotPotatoes;\n    this.teamStats = teamStats;\n    this.currentUser = currentUser;\n    this.onTaskClick = onTaskClick;\n    this.onTaskComplete = onTaskComplete;\n    this.isRunning = false;\n    this.animationId = null;\n    this.spirits = [];\n    this.particles = [];\n    this.locations = [];\n    this.selectedTask = null;\n    this.showTaskModal = false;\n\n    // Image assets\n    this.images = {};\n    this.imagesLoaded = false;\n    this.loadImages();\n    this.initializeLocations();\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.gameLoop = this.gameLoop.bind(this);\n    this.resizeCanvas();\n  }\n  async loadImages() {\n    const imageUrls = {\n      background: 'myimages/background.png',\n      spirit1: 'myimages/spirit1.png',\n      // common\n      spirit2: 'myimages/spirit2.png',\n      // rare\n      spirit3: 'myimages/spirit3.png' // epic\n    };\n    const loadPromises = Object.entries(imageUrls).map(([key, url]) => {\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n          this.images[key] = img;\n          resolve();\n        };\n        img.onerror = () => {\n          console.warn(`Failed to load image: ${url}`);\n          this.images[key] = null;\n          resolve();\n        };\n        img.src = url;\n      });\n    });\n    try {\n      await Promise.all(loadPromises);\n      this.imagesLoaded = true;\n      console.log('Images loaded successfully');\n    } catch (error) {\n      console.error('Error loading images:', error);\n      this.imagesLoaded = true;\n    }\n  }\n  initializeLocations() {\n    // Precise coordinates based on background image analysis\n    this.locations = [{\n      name: \"Sales Office\",\n      x: 150,\n      y: 350,\n      radius: 40,\n      color: \"#FFCC00\",\n      tasks: [],\n      number: 1\n    }, {\n      name: \"New Lead\",\n      x: 200,\n      y: 280,\n      radius: 40,\n      color: \"#66B2FF\",\n      tasks: [],\n      number: 2\n    }, {\n      name: \"New Customer\",\n      x: 320,\n      y: 240,\n      radius: 40,\n      color: \"#9B59B6\",\n      tasks: [],\n      number: 3\n    }, {\n      name: \"Pre-Construction\",\n      x: 520,\n      y: 140,\n      radius: 40,\n      color: \"#2ECC71\",\n      tasks: [],\n      number: 4\n    }, {\n      name: \"Construction\",\n      x: 580,\n      y: 300,\n      radius: 40,\n      color: \"#FF6B6B\",\n      tasks: [],\n      number: 5\n    }, {\n      name: \"Post Construction\",\n      x: 720,\n      y: 340,\n      radius: 40,\n      color: \"#4A90E2\",\n      tasks: [],\n      number: 6\n    }];\n  }\n  resizeCanvas() {\n    const container = this.canvas.parentElement;\n    const rect = container.getBoundingClientRect();\n    this.canvas.width = Math.min(800, rect.width - 20);\n    this.canvas.height = 400;\n  }\n  start() {\n    if (this.isRunning) return;\n    this.isRunning = true;\n    this.canvas.addEventListener('click', this.handleClick);\n    document.addEventListener('keydown', this.handleKeyPress);\n    this.generateSpirits();\n    this.updateTaskLocations();\n    this.gameLoop();\n  }\n  stop() {\n    this.isRunning = false;\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n    this.canvas.removeEventListener('click', this.handleClick);\n    document.removeEventListener('keydown', this.handleKeyPress);\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n  getDifficultyDistribution() {\n    const difficultyCount = {\n      common: 0,\n      rare: 0,\n      epic: 0\n    };\n    this.hotPotatoes.forEach(task => {\n      if (difficultyCount.hasOwnProperty(task.difficulty)) {\n        difficultyCount[task.difficulty]++;\n      }\n    });\n    return difficultyCount;\n  }\n  getTaskCountByCategoyAndDifficulty(category, difficulty) {\n    return this.hotPotatoes.filter(task => {\n      const taskCategory = this.mapCategoryToLocation(task.category);\n      return taskCategory === category && task.difficulty === difficulty;\n    }).length;\n  }\n  mapCategoryToLocation(taskCategory) {\n    switch (taskCategory) {\n      case 'Sales':\n        return \"Sales Office\";\n      case 'New Lead':\n        return \"New Lead\";\n      case 'New Customer':\n        return \"New Customer\";\n      case 'Construction':\n        return \"Construction\";\n      case 'Post Construction':\n        return \"Post Construction\";\n      case 'Pre-Construction':\n        return \"Pre-Construction\";\n      default:\n        return \"Sales Office\";\n    }\n  }\n  generateSpirits() {\n    this.spirits = [];\n    const spiritSize = 20;\n    this.locations.forEach(location => {\n      const difficulties = ['common', 'rare', 'epic'];\n      difficulties.forEach((difficulty, index) => {\n        const angleOffset = index * 120 * (Math.PI / 180);\n        const distance = 60;\n        this.spirits.push({\n          x: location.x + Math.cos(angleOffset) * distance,\n          y: location.y + Math.sin(angleOffset) * distance,\n          vx: 0,\n          vy: 0,\n          size: spiritSize,\n          difficulty: difficulty,\n          color: this.getSpiritColorByDifficulty(difficulty),\n          glow: 10,\n          pulsePhase: Math.random() * Math.PI * 2,\n          id: `${location.name}-${difficulty}`,\n          energy: 100,\n          location: location,\n          isStatic: true\n        });\n      });\n    });\n  }\n  getSpiritSizeByDifficulty(difficulty) {\n    switch (difficulty) {\n      case 'common':\n        return 12 + Math.random() * 6;\n      case 'rare':\n        return 16 + Math.random() * 8;\n      case 'epic':\n        return 20 + Math.random() * 10;\n      default:\n        return 15 + Math.random() * 10;\n    }\n  }\n  getSpiritColorByDifficulty(difficulty) {\n    switch (difficulty) {\n      case 'common':\n        return '#66B2FF';\n      case 'rare':\n        return '#9B59B6';\n      case 'epic':\n        return '#FF6B6B';\n      default:\n        return `hsl(${Math.random() * 360}, 70%, 60%)`;\n    }\n  }\n  getSpiritImageByDifficulty(difficulty) {\n    switch (difficulty) {\n      case 'common':\n        return this.images.spirit1;\n      case 'rare':\n        return this.images.spirit2;\n      case 'epic':\n        return this.images.spirit3;\n      default:\n        return null;\n    }\n  }\n  updateTaskLocations() {\n    this.locations.forEach(loc => loc.tasks = []);\n    this.hotPotatoes.forEach(task => {\n      let targetLocation;\n      switch (task.category) {\n        case 'Sales':\n          targetLocation = this.locations.find(l => l.name === \"Sales Office\");\n          break;\n        case 'New Lead':\n          targetLocation = this.locations.find(l => l.name === \"New Lead\");\n          break;\n        case 'New Customer':\n          targetLocation = this.locations.find(l => l.name === \"New Customer\");\n          break;\n        case 'Construction':\n          targetLocation = this.locations.find(l => l.name === \"Construction\");\n          break;\n        case 'Post Construction':\n          targetLocation = this.locations.find(l => l.name === \"Post Construction\");\n          break;\n        case 'Pre-Construction':\n          targetLocation = this.locations.find(l => l.name === \"Pre-Construction\");\n          break;\n        default:\n          targetLocation = this.locations.find(l => l.name === \"Sales Office\");\n      }\n      if (targetLocation) {\n        targetLocation.tasks.push(task);\n      }\n    });\n  }\n  handleClick(event) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    for (let spirit of this.spirits) {\n      const distance = Math.sqrt((x - spirit.x) ** 2 + (y - spirit.y) ** 2);\n      if (distance < spirit.size) {\n        this.handleSpiritClick(spirit);\n        return;\n      }\n    }\n    for (let location of this.locations) {\n      const distance = Math.sqrt((x - location.x) ** 2 + (y - location.y) ** 2);\n      if (distance < location.radius && location.tasks.length > 0) {\n        this.handleLocationClick(location);\n        return;\n      }\n    }\n  }\n  handleSpiritClick(spirit) {\n    if (spirit.location && spirit.location.tasks.length > 0) {\n      this.handleLocationClick(spirit.location);\n    }\n    const scoreMap = {\n      common: 10,\n      rare: 20,\n      epic: 30\n    };\n    const score = scoreMap[spirit.difficulty] || 10;\n    this.updateScore(score);\n    this.createParticles(spirit.x, spirit.y, `+${score}`, spirit.color);\n  }\n  handleLocationClick(location) {\n    if (location.tasks.length === 0) return;\n    const task = location.tasks[0];\n    this.selectedTask = task;\n    this.showTaskModal = true;\n    this.updateScore(25);\n    this.createParticles(location.x, location.y, \"+25\", \"#66B2FF\");\n  }\n  handleKeyPress(event) {\n    if (event.key === 'Escape') {\n      this.showTaskModal = false;\n      this.selectedTask = null;\n    }\n  }\n  createParticles(x, y, text, color) {\n    for (let i = 0; i < 5; i++) {\n      this.particles.push({\n        x: x + (Math.random() - 0.5) * 20,\n        y: y + (Math.random() - 0.5) * 20,\n        vx: (Math.random() - 0.5) * 4,\n        vy: -Math.random() * 3 - 1,\n        life: 60,\n        maxLife: 60,\n        color: color,\n        text: i === 0 ? text : null,\n        size: 4 + Math.random() * 4\n      });\n    }\n  }\n  updateSpirits() {\n    this.spirits.forEach(spirit => {\n      spirit.pulsePhase += 0.1;\n      spirit.currentGlow = spirit.glow + Math.sin(spirit.pulsePhase) * 5;\n    });\n  }\n  updateParticles() {\n    this.particles = this.particles.filter(particle => {\n      particle.x += particle.vx;\n      particle.y += particle.vy;\n      particle.vy += 0.1;\n      particle.life--;\n      return particle.life > 0;\n    });\n  }\n  render() {\n    // Draw background\n    if (this.images.background && this.imagesLoaded) {\n      this.ctx.drawImage(this.images.background, 0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.fillStyle = 'rgba(0, 20, 40, 0.3)';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    } else {\n      this.ctx.fillStyle = 'rgba(0, 20, 40, 0.1)';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    // Draw locations\n    this.locations.forEach(location => {\n      const taskCount = location.tasks.length;\n      this.ctx.beginPath();\n      this.ctx.arc(location.x, location.y, location.radius, 0, Math.PI * 2);\n      this.ctx.fillStyle = taskCount > 0 ? location.color + '80' : 'rgba(68, 68, 68, 0.5)';\n      this.ctx.fill();\n      this.ctx.strokeStyle = taskCount > 0 ? '#fff' : '#666';\n      this.ctx.lineWidth = 3;\n      this.ctx.stroke();\n\n      // Location number\n      this.ctx.beginPath();\n      this.ctx.arc(location.x - 25, location.y - 25, 12, 0, Math.PI * 2);\n      this.ctx.fillStyle = '#000';\n      this.ctx.fill();\n      this.ctx.strokeStyle = '#fff';\n      this.ctx.lineWidth = 2;\n      this.ctx.stroke();\n      this.ctx.fillStyle = '#fff';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText(location.number.toString(), location.x - 25, location.y - 20);\n\n      // Task count\n      if (taskCount > 0) {\n        this.ctx.beginPath();\n        this.ctx.arc(location.x + 25, location.y - 25, 15, 0, Math.PI * 2);\n        this.ctx.fillStyle = '#FF6B6B';\n        this.ctx.fill();\n        this.ctx.strokeStyle = '#fff';\n        this.ctx.lineWidth = 2;\n        this.ctx.stroke();\n        this.ctx.fillStyle = '#fff';\n        this.ctx.font = 'bold 14px Arial';\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText(taskCount.toString(), location.x + 25, location.y - 20);\n      }\n\n      // Location name\n      this.ctx.fillStyle = '#fff';\n      this.ctx.font = 'bold 11px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.strokeStyle = '#000';\n      this.ctx.lineWidth = 3;\n      this.ctx.strokeText(location.name, location.x, location.y + 50);\n      this.ctx.fillText(location.name, location.x, location.y + 50);\n    });\n\n    // Draw spirits\n    this.spirits.forEach(spirit => {\n      const spiritImage = this.getSpiritImageByDifficulty(spirit.difficulty);\n      if (spiritImage && this.imagesLoaded) {\n        // Glow effect\n        const gradient = this.ctx.createRadialGradient(spirit.x, spirit.y, 0, spirit.x, spirit.y, spirit.size + spirit.currentGlow);\n        gradient.addColorStop(0, spirit.color + '80');\n        gradient.addColorStop(1, 'transparent');\n        this.ctx.fillStyle = gradient;\n        this.ctx.beginPath();\n        this.ctx.arc(spirit.x, spirit.y, spirit.size + spirit.currentGlow, 0, Math.PI * 2);\n        this.ctx.fill();\n\n        // Draw sprite image\n        const imageSize = spirit.size * 2;\n        this.ctx.drawImage(spiritImage, spirit.x - imageSize / 2, spirit.y - imageSize / 2, imageSize, imageSize);\n\n        // Task count on sprite\n        if (spirit.location) {\n          const taskCount = this.getTaskCountByCategoyAndDifficulty(spirit.location.name, spirit.difficulty);\n          if (taskCount > 0) {\n            this.ctx.beginPath();\n            this.ctx.arc(spirit.x + spirit.size - 5, spirit.y - spirit.size + 5, 10, 0, Math.PI * 2);\n            this.ctx.fillStyle = '#FF6B6B';\n            this.ctx.fill();\n            this.ctx.strokeStyle = '#fff';\n            this.ctx.lineWidth = 2;\n            this.ctx.stroke();\n            this.ctx.fillStyle = '#fff';\n            this.ctx.font = 'bold 10px Arial';\n            this.ctx.textAlign = 'center';\n            this.ctx.fillText(taskCount.toString(), spirit.x + spirit.size - 5, spirit.y - spirit.size + 9);\n          }\n        }\n      } else {\n        // Fallback circles\n        const gradient = this.ctx.createRadialGradient(spirit.x, spirit.y, 0, spirit.x, spirit.y, spirit.size + spirit.currentGlow);\n        gradient.addColorStop(0, spirit.color);\n        gradient.addColorStop(1, 'transparent');\n        this.ctx.fillStyle = gradient;\n        this.ctx.beginPath();\n        this.ctx.arc(spirit.x, spirit.y, spirit.size + spirit.currentGlow, 0, Math.PI * 2);\n        this.ctx.fill();\n        this.ctx.fillStyle = spirit.color;\n        this.ctx.beginPath();\n        this.ctx.arc(spirit.x, spirit.y, spirit.size, 0, Math.PI * 2);\n        this.ctx.fill();\n\n        // Face\n        this.ctx.fillStyle = '#fff';\n        this.ctx.beginPath();\n        this.ctx.arc(spirit.x - 5, spirit.y - 3, 2, 0, Math.PI * 2);\n        this.ctx.arc(spirit.x + 5, spirit.y - 3, 2, 0, Math.PI * 2);\n        this.ctx.fill();\n        this.ctx.strokeStyle = '#fff';\n        this.ctx.lineWidth = 2;\n        this.ctx.beginPath();\n        this.ctx.arc(spirit.x, spirit.y + 3, 4, 0, Math.PI);\n        this.ctx.stroke();\n\n        // Task count\n        if (spirit.location) {\n          const taskCount = this.getTaskCountByCategoyAndDifficulty(spirit.location.name, spirit.difficulty);\n          if (taskCount > 0) {\n            this.ctx.beginPath();\n            this.ctx.arc(spirit.x + spirit.size - 5, spirit.y - spirit.size + 5, 10, 0, Math.PI * 2);\n            this.ctx.fillStyle = '#FF6B6B';\n            this.ctx.fill();\n            this.ctx.strokeStyle = '#fff';\n            this.ctx.lineWidth = 2;\n            this.ctx.stroke();\n            this.ctx.fillStyle = '#fff';\n            this.ctx.font = 'bold 10px Arial';\n            this.ctx.textAlign = 'center';\n            this.ctx.fillText(taskCount.toString(), spirit.x + spirit.size - 5, spirit.y - spirit.size + 9);\n          }\n        }\n      }\n    });\n\n    // Draw particles\n    this.particles.forEach(particle => {\n      const alpha = particle.life / particle.maxLife;\n      this.ctx.fillStyle = particle.color + Math.floor(alpha * 255).toString(16).padStart(2, '0');\n      if (particle.text) {\n        this.ctx.font = 'bold 16px Arial';\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText(particle.text, particle.x, particle.y);\n      } else {\n        this.ctx.beginPath();\n        this.ctx.arc(particle.x, particle.y, particle.size * alpha, 0, Math.PI * 2);\n        this.ctx.fill();\n      }\n    });\n\n    // Draw task modal\n    if (this.showTaskModal && this.selectedTask) {\n      this.drawTaskModal();\n    }\n  }\n  drawTaskModal() {\n    var _task$value, _this$teamStats$task$;\n    const task = this.selectedTask;\n    if (!task) return;\n    const modalWidth = 350;\n    const modalHeight = 250;\n    const modalX = (this.canvas.width - modalWidth) / 2;\n    const modalY = (this.canvas.height - modalHeight) / 2;\n\n    // Modal background\n    const gradient = this.ctx.createLinearGradient(modalX, modalY, modalX, modalY + modalHeight);\n    gradient.addColorStop(0, 'rgba(0, 44, 84, 0.98)');\n    gradient.addColorStop(1, 'rgba(0, 20, 40, 0.98)');\n    this.ctx.fillStyle = gradient;\n    this.ctx.fillRect(modalX, modalY, modalWidth, modalHeight);\n\n    // Modal border\n    const temp = task.temperature || 0;\n    let borderColor = '#66B2FF';\n    if (temp > 80) borderColor = '#FF6B6B';else if (temp > 60) borderColor = '#FFCC00';\n    this.ctx.strokeStyle = borderColor;\n    this.ctx.lineWidth = 3;\n    this.ctx.strokeRect(modalX, modalY, modalWidth, modalHeight);\n\n    // Task title\n    this.ctx.fillStyle = '#FFCC00';\n    this.ctx.font = 'bold 18px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(task.title, modalX + modalWidth / 2, modalY + 35);\n\n    // Difficulty and temperature indicators\n    const difficultyEmoji = task.difficulty === 'epic' ? '🔥' : task.difficulty === 'rare' ? '⚡' : '💎';\n    const tempEmoji = temp > 80 ? '🔥' : temp > 60 ? '🌶️' : temp > 40 ? '♨️' : '🫖';\n    this.ctx.fillStyle = '#fff';\n    this.ctx.font = '20px Arial';\n    this.ctx.fillText(`${difficultyEmoji} ${tempEmoji}`, modalX + modalWidth - 50, modalY + 35);\n\n    // Task details\n    this.ctx.fillStyle = '#fff';\n    this.ctx.font = '14px Arial';\n    this.ctx.textAlign = 'left';\n    const details = [`Category: ${task.category}`, `Difficulty: ${task.difficulty}`, `Value: ${((_task$value = task.value) === null || _task$value === void 0 ? void 0 : _task$value.toLocaleString()) || 0}`, `Holder: ${((_this$teamStats$task$ = this.teamStats[task.holder]) === null || _this$teamStats$task$ === void 0 ? void 0 : _this$teamStats$task$.name) || 'Unknown'}`, `Temperature: ${Math.round(temp)}°`, `Time Left: ${task.timeLeft || 0}s`, `Passes: ${task.passCount || 0}`];\n    details.forEach((detail, index) => {\n      this.ctx.fillText(detail, modalX + 20, modalY + 65 + index * 20);\n    });\n\n    // Progress bar\n    const barWidth = modalWidth - 40;\n    const barHeight = 8;\n    const barX = modalX + 20;\n    const barY = modalY + 210;\n    this.ctx.fillStyle = '#333';\n    this.ctx.fillRect(barX, barY, barWidth, barHeight);\n    this.ctx.fillStyle = temp > 80 ? '#FF6B6B' : temp > 60 ? '#FFCC00' : '#66B2FF';\n    this.ctx.fillRect(barX, barY, barWidth * temp / 100, barHeight);\n\n    // Action buttons\n    const isMyTask = task.holder === this.currentUser;\n    if (isMyTask) {\n      this.ctx.fillStyle = '#FFCC00';\n      this.ctx.fillRect(modalX + 20, modalY + 220, 100, 25);\n      this.ctx.fillStyle = '#000';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText('Pass Task', modalX + 70, modalY + 237);\n      this.ctx.fillStyle = '#2ECC71';\n      this.ctx.fillRect(modalX + 130, modalY + 220, 100, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.fillText('Complete', modalX + 180, modalY + 237);\n      this.ctx.fillStyle = '#FF6B6B';\n      this.ctx.fillRect(modalX + 240, modalY + 220, 80, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.fillText('Close', modalX + 280, modalY + 237);\n    } else {\n      this.ctx.fillStyle = '#FF6B6B';\n      this.ctx.fillRect(modalX + modalWidth / 2 - 40, modalY + 220, 80, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText('Close', modalX + modalWidth / 2, modalY + 237);\n    }\n\n    // Handle button clicks\n    if (!this.modalClickHandler) {\n      this.modalClickHandler = event => {\n        if (!this.showTaskModal) return;\n        const rect = this.canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        if (y >= modalY + 220 && y <= modalY + 245) {\n          if (isMyTask) {\n            if (x >= modalX + 20 && x <= modalX + 120) {\n              this.onTaskClick(task);\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            } else if (x >= modalX + 130 && x <= modalX + 230) {\n              this.onTaskComplete(task);\n              this.showTaskModal = false;\n              this.selectedTask = null;\n              this.updateTaskLocations();\n              this.generateSpirits();\n            } else if (x >= modalX + 240 && x <= modalX + 320) {\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            }\n          } else {\n            if (x >= modalX + modalWidth / 2 - 40 && x <= modalX + modalWidth / 2 + 40) {\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            }\n          }\n        }\n      };\n      this.canvas.addEventListener('click', this.modalClickHandler);\n    }\n  }\n  gameLoop() {\n    if (!this.isRunning) return;\n    this.updateSpirits();\n    this.updateParticles();\n    this.updateTaskLocations();\n    this.render();\n    this.animationId = requestAnimationFrame(this.gameLoop);\n  }\n}\nexport default HotPotatoGame;","map":{"version":3,"names":["HotPotatoGame","constructor","canvasId","gameState","updateScore","hotPotatoes","teamStats","currentUser","onTaskClick","onTaskComplete","canvas","document","getElementById","console","error","ctx","getContext","isRunning","animationId","spirits","particles","locations","selectedTask","showTaskModal","images","imagesLoaded","loadImages","initializeLocations","handleClick","bind","handleKeyPress","gameLoop","resizeCanvas","imageUrls","background","spirit1","spirit2","spirit3","loadPromises","Object","entries","map","key","url","Promise","resolve","reject","img","Image","onload","onerror","warn","src","all","log","name","x","y","radius","color","tasks","number","container","parentElement","rect","getBoundingClientRect","width","Math","min","height","start","addEventListener","generateSpirits","updateTaskLocations","stop","cancelAnimationFrame","removeEventListener","clearRect","getDifficultyDistribution","difficultyCount","common","rare","epic","forEach","task","hasOwnProperty","difficulty","getTaskCountByCategoyAndDifficulty","category","filter","taskCategory","mapCategoryToLocation","length","spiritSize","location","difficulties","index","angleOffset","PI","distance","push","cos","sin","vx","vy","size","getSpiritColorByDifficulty","glow","pulsePhase","random","id","energy","isStatic","getSpiritSizeByDifficulty","getSpiritImageByDifficulty","loc","targetLocation","find","l","event","clientX","left","clientY","top","spirit","sqrt","handleSpiritClick","handleLocationClick","scoreMap","score","createParticles","text","i","life","maxLife","updateSpirits","currentGlow","updateParticles","particle","render","drawImage","fillStyle","fillRect","taskCount","beginPath","arc","fill","strokeStyle","lineWidth","stroke","font","textAlign","fillText","toString","strokeText","spiritImage","gradient","createRadialGradient","addColorStop","imageSize","alpha","floor","padStart","drawTaskModal","_task$value","_this$teamStats$task$","modalWidth","modalHeight","modalX","modalY","createLinearGradient","temp","temperature","borderColor","strokeRect","title","difficultyEmoji","tempEmoji","details","value","toLocaleString","holder","round","timeLeft","passCount","detail","barWidth","barHeight","barX","barY","isMyTask","modalClickHandler","requestAnimationFrame"],"sources":["/Users/SUNLAB/hot-potato/frontend/src/game.js"],"sourcesContent":["class HotPotatoGame {\n  constructor(canvasId, gameState, updateScore, hotPotatoes, teamStats, currentUser, onTaskClick, onTaskComplete) {\n    this.canvas = document.getElementById(canvasId);\n    if (!this.canvas) {\n      console.error('Canvas element not found');\n      return;\n    }\n    \n    this.ctx = this.canvas.getContext('2d');\n    this.gameState = gameState;\n    this.updateScore = updateScore;\n    this.hotPotatoes = hotPotatoes;\n    this.teamStats = teamStats;\n    this.currentUser = currentUser;\n    this.onTaskClick = onTaskClick;\n    this.onTaskComplete = onTaskComplete;\n    \n    this.isRunning = false;\n    this.animationId = null;\n    this.spirits = [];\n    this.particles = [];\n    this.locations = [];\n    this.selectedTask = null;\n    this.showTaskModal = false;\n    \n    // Image assets\n    this.images = {};\n    this.imagesLoaded = false;\n    this.loadImages();\n    \n    this.initializeLocations();\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.gameLoop = this.gameLoop.bind(this);\n    this.resizeCanvas();\n  }\n  \n  async loadImages() {\n    const imageUrls = {\n      background: 'myimages/background.png',\n      spirit1: 'myimages/spirit1.png', // common\n      spirit2: 'myimages/spirit2.png', // rare\n      spirit3: 'myimages/spirit3.png'  // epic\n    };\n    \n    const loadPromises = Object.entries(imageUrls).map(([key, url]) => {\n      return new Promise((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n          this.images[key] = img;\n          resolve();\n        };\n        img.onerror = () => {\n          console.warn(`Failed to load image: ${url}`);\n          this.images[key] = null;\n          resolve();\n        };\n        img.src = url;\n      });\n    });\n    \n    try {\n      await Promise.all(loadPromises);\n      this.imagesLoaded = true;\n      console.log('Images loaded successfully');\n    } catch (error) {\n      console.error('Error loading images:', error);\n      this.imagesLoaded = true;\n    }\n  }\n  \n  initializeLocations() {\n    // Precise coordinates based on background image analysis\n    this.locations = [\n      { name: \"Sales Office\", x: 150, y: 350, radius: 40, color: \"#FFCC00\", tasks: [], number: 1 },\n      { name: \"New Lead\", x: 200, y: 280, radius: 40, color: \"#66B2FF\", tasks: [], number: 2 },\n      { name: \"New Customer\", x: 320, y: 240, radius: 40, color: \"#9B59B6\", tasks: [], number: 3 },\n      { name: \"Pre-Construction\", x: 520, y: 140, radius: 40, color: \"#2ECC71\", tasks: [], number: 4 },\n      { name: \"Construction\", x: 580, y: 300, radius: 40, color: \"#FF6B6B\", tasks: [], number: 5 },\n      { name: \"Post Construction\", x: 720, y: 340, radius: 40, color: \"#4A90E2\", tasks: [], number: 6 }\n    ];\n  }\n  \n  resizeCanvas() {\n    const container = this.canvas.parentElement;\n    const rect = container.getBoundingClientRect();\n    this.canvas.width = Math.min(800, rect.width - 20);\n    this.canvas.height = 400;\n  }\n  \n  start() {\n    if (this.isRunning) return;\n    this.isRunning = true;\n    this.canvas.addEventListener('click', this.handleClick);\n    document.addEventListener('keydown', this.handleKeyPress);\n    this.generateSpirits();\n    this.updateTaskLocations();\n    this.gameLoop();\n  }\n  \n  stop() {\n    this.isRunning = false;\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n    this.canvas.removeEventListener('click', this.handleClick);\n    document.removeEventListener('keydown', this.handleKeyPress);\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n  \n  getDifficultyDistribution() {\n    const difficultyCount = { common: 0, rare: 0, epic: 0 };\n    \n    this.hotPotatoes.forEach(task => {\n      if (difficultyCount.hasOwnProperty(task.difficulty)) {\n        difficultyCount[task.difficulty]++;\n      }\n    });\n    \n    return difficultyCount;\n  }\n\n  getTaskCountByCategoyAndDifficulty(category, difficulty) {\n    return this.hotPotatoes.filter(task => {\n      const taskCategory = this.mapCategoryToLocation(task.category);\n      return taskCategory === category && task.difficulty === difficulty;\n    }).length;\n  }\n\n  mapCategoryToLocation(taskCategory) {\n    switch(taskCategory) {\n      case 'Sales':\n        return \"Sales Office\";\n      case 'New Lead':\n        return \"New Lead\";\n      case 'New Customer':\n        return \"New Customer\";\n      case 'Construction':\n        return \"Construction\";\n      case 'Post Construction':\n        return \"Post Construction\";\n      case 'Pre-Construction':\n        return \"Pre-Construction\";\n      default:\n        return \"Sales Office\";\n    }\n  }\n  \n  generateSpirits() {\n    this.spirits = [];\n    const spiritSize = 20;\n    \n    this.locations.forEach(location => {\n      const difficulties = ['common', 'rare', 'epic'];\n      \n      difficulties.forEach((difficulty, index) => {\n        const angleOffset = (index * 120) * (Math.PI / 180);\n        const distance = 60;\n        \n        this.spirits.push({\n          x: location.x + Math.cos(angleOffset) * distance,\n          y: location.y + Math.sin(angleOffset) * distance,\n          vx: 0,\n          vy: 0,\n          size: spiritSize,\n          difficulty: difficulty,\n          color: this.getSpiritColorByDifficulty(difficulty),\n          glow: 10,\n          pulsePhase: Math.random() * Math.PI * 2,\n          id: `${location.name}-${difficulty}`,\n          energy: 100,\n          location: location,\n          isStatic: true\n        });\n      });\n    });\n  }\n  \n  getSpiritSizeByDifficulty(difficulty) {\n    switch(difficulty) {\n      case 'common': return 12 + Math.random() * 6;\n      case 'rare': return 16 + Math.random() * 8;\n      case 'epic': return 20 + Math.random() * 10;\n      default: return 15 + Math.random() * 10;\n    }\n  }\n  \n  getSpiritColorByDifficulty(difficulty) {\n    switch(difficulty) {\n      case 'common': return '#66B2FF';\n      case 'rare': return '#9B59B6';\n      case 'epic': return '#FF6B6B';\n      default: return `hsl(${Math.random() * 360}, 70%, 60%)`;\n    }\n  }\n  \n  getSpiritImageByDifficulty(difficulty) {\n    switch(difficulty) {\n      case 'common': return this.images.spirit1;\n      case 'rare': return this.images.spirit2;\n      case 'epic': return this.images.spirit3;\n      default: return null;\n    }\n  }\n  \n  updateTaskLocations() {\n    this.locations.forEach(loc => loc.tasks = []);\n    \n    this.hotPotatoes.forEach(task => {\n      let targetLocation;\n      \n      switch(task.category) {\n        case 'Sales':\n          targetLocation = this.locations.find(l => l.name === \"Sales Office\");\n          break;\n        case 'New Lead':\n          targetLocation = this.locations.find(l => l.name === \"New Lead\");\n          break;\n        case 'New Customer':\n          targetLocation = this.locations.find(l => l.name === \"New Customer\");\n          break;\n        case 'Construction':\n          targetLocation = this.locations.find(l => l.name === \"Construction\");\n          break;\n        case 'Post Construction':\n          targetLocation = this.locations.find(l => l.name === \"Post Construction\");\n          break;\n        case 'Pre-Construction':\n          targetLocation = this.locations.find(l => l.name === \"Pre-Construction\");\n          break;\n        default:\n          targetLocation = this.locations.find(l => l.name === \"Sales Office\");\n      }\n      \n      if (targetLocation) {\n        targetLocation.tasks.push(task);\n      }\n    });\n  }\n  \n  handleClick(event) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    \n    for (let spirit of this.spirits) {\n      const distance = Math.sqrt((x - spirit.x) ** 2 + (y - spirit.y) ** 2);\n      if (distance < spirit.size) {\n        this.handleSpiritClick(spirit);\n        return;\n      }\n    }\n    \n    for (let location of this.locations) {\n      const distance = Math.sqrt((x - location.x) ** 2 + (y - location.y) ** 2);\n      if (distance < location.radius && location.tasks.length > 0) {\n        this.handleLocationClick(location);\n        return;\n      }\n    }\n  }\n  \n  handleSpiritClick(spirit) {\n    if (spirit.location && spirit.location.tasks.length > 0) {\n      this.handleLocationClick(spirit.location);\n    }\n    \n    const scoreMap = { common: 10, rare: 20, epic: 30 };\n    const score = scoreMap[spirit.difficulty] || 10;\n    \n    this.updateScore(score);\n    this.createParticles(spirit.x, spirit.y, `+${score}`, spirit.color);\n  }\n  \n  handleLocationClick(location) {\n    if (location.tasks.length === 0) return;\n    \n    const task = location.tasks[0];\n    this.selectedTask = task;\n    this.showTaskModal = true;\n    \n    this.updateScore(25);\n    this.createParticles(location.x, location.y, \"+25\", \"#66B2FF\");\n  }\n  \n  handleKeyPress(event) {\n    if (event.key === 'Escape') {\n      this.showTaskModal = false;\n      this.selectedTask = null;\n    }\n  }\n  \n  createParticles(x, y, text, color) {\n    for (let i = 0; i < 5; i++) {\n      this.particles.push({\n        x: x + (Math.random() - 0.5) * 20,\n        y: y + (Math.random() - 0.5) * 20,\n        vx: (Math.random() - 0.5) * 4,\n        vy: -Math.random() * 3 - 1,\n        life: 60,\n        maxLife: 60,\n        color: color,\n        text: i === 0 ? text : null,\n        size: 4 + Math.random() * 4\n      });\n    }\n  }\n  \n  updateSpirits() {\n    this.spirits.forEach(spirit => {\n      spirit.pulsePhase += 0.1;\n      spirit.currentGlow = spirit.glow + Math.sin(spirit.pulsePhase) * 5;\n    });\n  }\n  \n  updateParticles() {\n    this.particles = this.particles.filter(particle => {\n      particle.x += particle.vx;\n      particle.y += particle.vy;\n      particle.vy += 0.1;\n      particle.life--;\n      return particle.life > 0;\n    });\n  }\n  \n  render() {\n    // Draw background\n    if (this.images.background && this.imagesLoaded) {\n      this.ctx.drawImage(this.images.background, 0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.fillStyle = 'rgba(0, 20, 40, 0.3)';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    } else {\n      this.ctx.fillStyle = 'rgba(0, 20, 40, 0.1)';\n      this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    \n    // Draw locations\n    this.locations.forEach(location => {\n      const taskCount = location.tasks.length;\n      \n      this.ctx.beginPath();\n      this.ctx.arc(location.x, location.y, location.radius, 0, Math.PI * 2);\n      this.ctx.fillStyle = taskCount > 0 ? location.color + '80' : 'rgba(68, 68, 68, 0.5)';\n      this.ctx.fill();\n      \n      this.ctx.strokeStyle = taskCount > 0 ? '#fff' : '#666';\n      this.ctx.lineWidth = 3;\n      this.ctx.stroke();\n      \n      // Location number\n      this.ctx.beginPath();\n      this.ctx.arc(location.x - 25, location.y - 25, 12, 0, Math.PI * 2);\n      this.ctx.fillStyle = '#000';\n      this.ctx.fill();\n      this.ctx.strokeStyle = '#fff';\n      this.ctx.lineWidth = 2;\n      this.ctx.stroke();\n      \n      this.ctx.fillStyle = '#fff';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText(location.number.toString(), location.x - 25, location.y - 20);\n      \n      // Task count\n      if (taskCount > 0) {\n        this.ctx.beginPath();\n        this.ctx.arc(location.x + 25, location.y - 25, 15, 0, Math.PI * 2);\n        this.ctx.fillStyle = '#FF6B6B';\n        this.ctx.fill();\n        this.ctx.strokeStyle = '#fff';\n        this.ctx.lineWidth = 2;\n        this.ctx.stroke();\n        \n        this.ctx.fillStyle = '#fff';\n        this.ctx.font = 'bold 14px Arial';\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText(taskCount.toString(), location.x + 25, location.y - 20);\n      }\n      \n      // Location name\n      this.ctx.fillStyle = '#fff';\n      this.ctx.font = 'bold 11px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.strokeStyle = '#000';\n      this.ctx.lineWidth = 3;\n      this.ctx.strokeText(location.name, location.x, location.y + 50);\n      this.ctx.fillText(location.name, location.x, location.y + 50);\n    });\n    \n    // Draw spirits\n    this.spirits.forEach(spirit => {\n      const spiritImage = this.getSpiritImageByDifficulty(spirit.difficulty);\n      \n      if (spiritImage && this.imagesLoaded) {\n        // Glow effect\n        const gradient = this.ctx.createRadialGradient(\n          spirit.x, spirit.y, 0,\n          spirit.x, spirit.y, spirit.size + spirit.currentGlow\n        );\n        gradient.addColorStop(0, spirit.color + '80');\n        gradient.addColorStop(1, 'transparent');\n        \n        this.ctx.fillStyle = gradient;\n        this.ctx.beginPath();\n        this.ctx.arc(spirit.x, spirit.y, spirit.size + spirit.currentGlow, 0, Math.PI * 2);\n        this.ctx.fill();\n        \n        // Draw sprite image\n        const imageSize = spirit.size * 2;\n        this.ctx.drawImage(\n          spiritImage,\n          spirit.x - imageSize/2,\n          spirit.y - imageSize/2,\n          imageSize,\n          imageSize\n        );\n\n        // Task count on sprite\n        if (spirit.location) {\n          const taskCount = this.getTaskCountByCategoyAndDifficulty(spirit.location.name, spirit.difficulty);\n          \n          if (taskCount > 0) {\n            this.ctx.beginPath();\n            this.ctx.arc(spirit.x + spirit.size - 5, spirit.y - spirit.size + 5, 10, 0, Math.PI * 2);\n            this.ctx.fillStyle = '#FF6B6B';\n            this.ctx.fill();\n            \n            this.ctx.strokeStyle = '#fff';\n            this.ctx.lineWidth = 2;\n            this.ctx.stroke();\n            \n            this.ctx.fillStyle = '#fff';\n            this.ctx.font = 'bold 10px Arial';\n            this.ctx.textAlign = 'center';\n            this.ctx.fillText(taskCount.toString(), spirit.x + spirit.size - 5, spirit.y - spirit.size + 9);\n          }\n        }\n      } else {\n        // Fallback circles\n        const gradient = this.ctx.createRadialGradient(\n          spirit.x, spirit.y, 0,\n          spirit.x, spirit.y, spirit.size + spirit.currentGlow\n        );\n        gradient.addColorStop(0, spirit.color);\n        gradient.addColorStop(1, 'transparent');\n        \n        this.ctx.fillStyle = gradient;\n        this.ctx.beginPath();\n        this.ctx.arc(spirit.x, spirit.y, spirit.size + spirit.currentGlow, 0, Math.PI * 2);\n        this.ctx.fill();\n        \n        this.ctx.fillStyle = spirit.color;\n        this.ctx.beginPath();\n        this.ctx.arc(spirit.x, spirit.y, spirit.size, 0, Math.PI * 2);\n        this.ctx.fill();\n        \n        // Face\n        this.ctx.fillStyle = '#fff';\n        this.ctx.beginPath();\n        this.ctx.arc(spirit.x - 5, spirit.y - 3, 2, 0, Math.PI * 2);\n        this.ctx.arc(spirit.x + 5, spirit.y - 3, 2, 0, Math.PI * 2);\n        this.ctx.fill();\n        \n        this.ctx.strokeStyle = '#fff';\n        this.ctx.lineWidth = 2;\n        this.ctx.beginPath();\n        this.ctx.arc(spirit.x, spirit.y + 3, 4, 0, Math.PI);\n        this.ctx.stroke();\n\n        // Task count\n        if (spirit.location) {\n          const taskCount = this.getTaskCountByCategoyAndDifficulty(spirit.location.name, spirit.difficulty);\n          \n          if (taskCount > 0) {\n            this.ctx.beginPath();\n            this.ctx.arc(spirit.x + spirit.size - 5, spirit.y - spirit.size + 5, 10, 0, Math.PI * 2);\n            this.ctx.fillStyle = '#FF6B6B';\n            this.ctx.fill();\n            \n            this.ctx.strokeStyle = '#fff';\n            this.ctx.lineWidth = 2;\n            this.ctx.stroke();\n            \n            this.ctx.fillStyle = '#fff';\n            this.ctx.font = 'bold 10px Arial';\n            this.ctx.textAlign = 'center';\n            this.ctx.fillText(taskCount.toString(), spirit.x + spirit.size - 5, spirit.y - spirit.size + 9);\n          }\n        }\n      }\n    });\n    \n    // Draw particles\n    this.particles.forEach(particle => {\n      const alpha = particle.life / particle.maxLife;\n      this.ctx.fillStyle = particle.color + Math.floor(alpha * 255).toString(16).padStart(2, '0');\n      \n      if (particle.text) {\n        this.ctx.font = 'bold 16px Arial';\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText(particle.text, particle.x, particle.y);\n      } else {\n        this.ctx.beginPath();\n        this.ctx.arc(particle.x, particle.y, particle.size * alpha, 0, Math.PI * 2);\n        this.ctx.fill();\n      }\n    });\n    \n    // Draw task modal\n    if (this.showTaskModal && this.selectedTask) {\n      this.drawTaskModal();\n    }\n  }\n  \n  drawTaskModal() {\n    const task = this.selectedTask;\n    if (!task) return;\n    \n    const modalWidth = 350;\n    const modalHeight = 250;\n    const modalX = (this.canvas.width - modalWidth) / 2;\n    const modalY = (this.canvas.height - modalHeight) / 2;\n    \n    // Modal background\n    const gradient = this.ctx.createLinearGradient(modalX, modalY, modalX, modalY + modalHeight);\n    gradient.addColorStop(0, 'rgba(0, 44, 84, 0.98)');\n    gradient.addColorStop(1, 'rgba(0, 20, 40, 0.98)');\n    this.ctx.fillStyle = gradient;\n    this.ctx.fillRect(modalX, modalY, modalWidth, modalHeight);\n    \n    // Modal border\n    const temp = task.temperature || 0;\n    let borderColor = '#66B2FF';\n    if (temp > 80) borderColor = '#FF6B6B';\n    else if (temp > 60) borderColor = '#FFCC00';\n    \n    this.ctx.strokeStyle = borderColor;\n    this.ctx.lineWidth = 3;\n    this.ctx.strokeRect(modalX, modalY, modalWidth, modalHeight);\n    \n    // Task title\n    this.ctx.fillStyle = '#FFCC00';\n    this.ctx.font = 'bold 18px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(task.title, modalX + modalWidth / 2, modalY + 35);\n    \n    // Difficulty and temperature indicators\n    const difficultyEmoji = task.difficulty === 'epic' ? '🔥' : task.difficulty === 'rare' ? '⚡' : '💎';\n    const tempEmoji = temp > 80 ? '🔥' : temp > 60 ? '🌶️' : temp > 40 ? '♨️' : '🫖';\n    \n    this.ctx.fillStyle = '#fff';\n    this.ctx.font = '20px Arial';\n    this.ctx.fillText(`${difficultyEmoji} ${tempEmoji}`, modalX + modalWidth - 50, modalY + 35);\n    \n    // Task details\n    this.ctx.fillStyle = '#fff';\n    this.ctx.font = '14px Arial';\n    this.ctx.textAlign = 'left';\n    \n    const details = [\n      `Category: ${task.category}`,\n      `Difficulty: ${task.difficulty}`,\n      `Value: ${task.value?.toLocaleString() || 0}`,\n      `Holder: ${this.teamStats[task.holder]?.name || 'Unknown'}`,\n      `Temperature: ${Math.round(temp)}°`,\n      `Time Left: ${task.timeLeft || 0}s`,\n      `Passes: ${task.passCount || 0}`\n    ];\n    \n    details.forEach((detail, index) => {\n      this.ctx.fillText(detail, modalX + 20, modalY + 65 + index * 20);\n    });\n    \n    // Progress bar\n    const barWidth = modalWidth - 40;\n    const barHeight = 8;\n    const barX = modalX + 20;\n    const barY = modalY + 210;\n    \n    this.ctx.fillStyle = '#333';\n    this.ctx.fillRect(barX, barY, barWidth, barHeight);\n    \n    this.ctx.fillStyle = temp > 80 ? '#FF6B6B' : temp > 60 ? '#FFCC00' : '#66B2FF';\n    this.ctx.fillRect(barX, barY, (barWidth * temp) / 100, barHeight);\n    \n    // Action buttons\n    const isMyTask = task.holder === this.currentUser;\n    \n    if (isMyTask) {\n      this.ctx.fillStyle = '#FFCC00';\n      this.ctx.fillRect(modalX + 20, modalY + 220, 100, 25);\n      this.ctx.fillStyle = '#000';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText('Pass Task', modalX + 70, modalY + 237);\n      \n      this.ctx.fillStyle = '#2ECC71';\n      this.ctx.fillRect(modalX + 130, modalY + 220, 100, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.fillText('Complete', modalX + 180, modalY + 237);\n      \n      this.ctx.fillStyle = '#FF6B6B';\n      this.ctx.fillRect(modalX + 240, modalY + 220, 80, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.fillText('Close', modalX + 280, modalY + 237);\n    } else {\n      this.ctx.fillStyle = '#FF6B6B';\n      this.ctx.fillRect(modalX + modalWidth/2 - 40, modalY + 220, 80, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText('Close', modalX + modalWidth/2, modalY + 237);\n    }\n    \n    // Handle button clicks\n    if (!this.modalClickHandler) {\n      this.modalClickHandler = (event) => {\n        if (!this.showTaskModal) return;\n        \n        const rect = this.canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        \n        if (y >= modalY + 220 && y <= modalY + 245) {\n          if (isMyTask) {\n            if (x >= modalX + 20 && x <= modalX + 120) {\n              this.onTaskClick(task);\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            } else if (x >= modalX + 130 && x <= modalX + 230) {\n              this.onTaskComplete(task);\n              this.showTaskModal = false;\n              this.selectedTask = null;\n              this.updateTaskLocations();\n              this.generateSpirits();\n            } else if (x >= modalX + 240 && x <= modalX + 320) {\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            }\n          } else {\n            if (x >= modalX + modalWidth/2 - 40 && x <= modalX + modalWidth/2 + 40) {\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            }\n          }\n        }\n      };\n      this.canvas.addEventListener('click', this.modalClickHandler);\n    }\n  }\n  \n  gameLoop() {\n    if (!this.isRunning) return;\n    \n    this.updateSpirits();\n    this.updateParticles();\n    this.updateTaskLocations();\n    this.render();\n    \n    this.animationId = requestAnimationFrame(this.gameLoop);\n  }\n}\n\nexport default HotPotatoGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}