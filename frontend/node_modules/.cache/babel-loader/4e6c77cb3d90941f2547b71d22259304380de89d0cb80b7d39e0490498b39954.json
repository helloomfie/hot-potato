{"ast":null,"code":"class HotPotatoGame {\n  constructor(canvasId, gameState, updateScore, hotPotatoes, teamStats, currentUser, onTaskClick, onTaskComplete) {\n    this.canvas = document.getElementById(canvasId);\n    if (!this.canvas) {\n      console.error('Canvas element not found');\n      return;\n    }\n    this.ctx = this.canvas.getContext('2d');\n    this.gameState = gameState;\n    this.updateScore = updateScore;\n    this.hotPotatoes = hotPotatoes;\n    this.teamStats = teamStats;\n    this.currentUser = currentUser;\n    this.onTaskClick = onTaskClick;\n    this.onTaskComplete = onTaskComplete;\n    this.isRunning = false;\n    this.animationId = null;\n    this.spirits = [];\n    this.particles = [];\n    this.locations = [];\n    this.selectedTask = null;\n    this.showTaskModal = false;\n    this.initializeLocations();\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.gameLoop = this.gameLoop.bind(this);\n    this.resizeCanvas();\n  }\n  initializeLocations() {\n    this.locations = [{\n      name: \"Sales Office\",\n      x: 100,\n      y: 100,\n      radius: 60,\n      color: \"#FFCC00\",\n      tasks: []\n    }, {\n      name: \"Customer Service\",\n      x: 300,\n      y: 150,\n      radius: 60,\n      color: \"#66B2FF\",\n      tasks: []\n    }, {\n      name: \"Construction Hub\",\n      x: 500,\n      y: 100,\n      radius: 60,\n      color: \"#9B59B6\",\n      tasks: []\n    }, {\n      name: \"Quality Control\",\n      x: 700,\n      y: 150,\n      radius: 60,\n      color: \"#2ECC71\",\n      tasks: []\n    }, {\n      name: \"Pre-Construction\",\n      x: 200,\n      y: 300,\n      radius: 60,\n      color: \"#FF6B6B\",\n      tasks: []\n    }, {\n      name: \"Admin Center\",\n      x: 600,\n      y: 300,\n      radius: 60,\n      color: \"#4A90E2\",\n      tasks: []\n    }];\n  }\n  resizeCanvas() {\n    const container = this.canvas.parentElement;\n    const rect = container.getBoundingClientRect();\n    this.canvas.width = Math.min(800, rect.width - 20);\n    this.canvas.height = 400;\n  }\n  start() {\n    if (this.isRunning) return;\n    this.isRunning = true;\n    this.canvas.addEventListener('click', this.handleClick);\n    document.addEventListener('keydown', this.handleKeyPress);\n    this.generateSpirits();\n    this.updateTaskLocations();\n    this.gameLoop();\n  }\n  stop() {\n    this.isRunning = false;\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n    this.canvas.removeEventListener('click', this.handleClick);\n    document.removeEventListener('keydown', this.handleKeyPress);\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n  generateSpirits() {\n    this.spirits = [];\n    const totalTasks = this.hotPotatoes.length;\n    const spiritCount = Math.min(8, Math.max(3, Math.floor(totalTasks / 2)));\n    for (let i = 0; i < spiritCount; i++) {\n      this.spirits.push({\n        x: Math.random() * (this.canvas.width - 60) + 30,\n        y: Math.random() * (this.canvas.height - 60) + 30,\n        vx: (Math.random() - 0.5) * 2,\n        vy: (Math.random() - 0.5) * 2,\n        size: 15 + Math.random() * 10,\n        color: `hsl(${Math.random() * 360}, 70%, 60%)`,\n        glow: Math.random() * 15 + 10,\n        pulsePhase: Math.random() * Math.PI * 2,\n        id: i,\n        energy: Math.random() * 100 + 50\n      });\n    }\n  }\n  updateTaskLocations() {\n    // Clear existing task assignments\n    this.locations.forEach(loc => loc.tasks = []);\n\n    // Distribute tasks to locations based on category\n    this.hotPotatoes.forEach(task => {\n      let targetLocation;\n      switch (task.category) {\n        case 'Sales':\n          targetLocation = this.locations.find(l => l.name === \"Sales Office\");\n          break;\n        case 'New Lead':\n        case 'New Customer':\n          targetLocation = this.locations.find(l => l.name === \"Customer Service\");\n          break;\n        case 'Construction':\n          targetLocation = this.locations.find(l => l.name === \"Construction Hub\");\n          break;\n        case 'Post Construction':\n          targetLocation = this.locations.find(l => l.name === \"Quality Control\");\n          break;\n        case 'Pre-Construction':\n          targetLocation = this.locations.find(l => l.name === \"Pre-Construction\");\n          break;\n        default:\n          targetLocation = this.locations.find(l => l.name === \"Admin Center\");\n      }\n      if (targetLocation) {\n        targetLocation.tasks.push(task);\n      }\n    });\n  }\n  handleClick(event) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    for (let spirit of this.spirits) {\n      const distance = Math.sqrt((x - spirit.x) ** 2 + (y - spirit.y) ** 2);\n      if (distance < spirit.size) {\n        this.handleSpiritClick(spirit);\n        return;\n      }\n    }\n    for (let location of this.locations) {\n      const distance = Math.sqrt((x - location.x) ** 2 + (y - location.y) ** 2);\n      if (distance < location.radius && location.tasks.length > 0) {\n        this.handleLocationClick(location);\n        return;\n      }\n    }\n  }\n  handleSpiritClick(spirit) {\n    let nearestLocation = null;\n    let minDistance = Infinity;\n    for (let location of this.locations) {\n      if (location.tasks.length > 0) {\n        const distance = Math.sqrt((spirit.x - location.x) ** 2 + (spirit.y - location.y) ** 2);\n        if (distance < minDistance) {\n          minDistance = distance;\n          nearestLocation = location;\n        }\n      }\n    }\n    if (nearestLocation) {\n      this.handleLocationClick(nearestLocation);\n    }\n    this.updateScore(10);\n    this.createParticles(spirit.x, spirit.y, \"+10\", \"#FFCC00\");\n  }\n  handleLocationClick(location) {\n    if (location.tasks.length === 0) return;\n    const task = location.tasks[0];\n    this.selectedTask = task;\n    this.showTaskModal = true;\n    this.updateScore(25);\n    this.createParticles(location.x, location.y, \"+25\", \"#66B2FF\");\n  }\n  handleKeyPress(event) {\n    if (event.key === 'Escape') {\n      this.showTaskModal = false;\n      this.selectedTask = null;\n    }\n  }\n  createParticles(x, y, text, color) {\n    for (let i = 0; i < 5; i++) {\n      this.particles.push({\n        x: x + (Math.random() - 0.5) * 20,\n        y: y + (Math.random() - 0.5) * 20,\n        vx: (Math.random() - 0.5) * 4,\n        vy: -Math.random() * 3 - 1,\n        life: 60,\n        maxLife: 60,\n        color: color,\n        text: i === 0 ? text : null,\n        size: 4 + Math.random() * 4\n      });\n    }\n  }\n  updateSpirits() {\n    this.spirits.forEach(spirit => {\n      spirit.x += spirit.vx;\n      spirit.y += spirit.vy;\n      if (spirit.x <= spirit.size || spirit.x >= this.canvas.width - spirit.size) {\n        spirit.vx *= -0.8;\n        spirit.x = Math.max(spirit.size, Math.min(this.canvas.width - spirit.size, spirit.x));\n      }\n      if (spirit.y <= spirit.size || spirit.y >= this.canvas.height - spirit.size) {\n        spirit.vy *= -0.8;\n        spirit.y = Math.max(spirit.size, Math.min(this.canvas.height - spirit.size, spirit.y));\n      }\n      spirit.pulsePhase += 0.1;\n      spirit.currentGlow = spirit.glow + Math.sin(spirit.pulsePhase) * 5;\n      for (let location of this.locations) {\n        if (location.tasks.length > 0) {\n          const dx = location.x - spirit.x;\n          const dy = location.y - spirit.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance > 0 && distance < 150) {\n            const force = 0.02 / distance;\n            spirit.vx += dx / distance * force;\n            spirit.vy += dy / distance * force;\n          }\n        }\n      }\n      spirit.vx *= 0.99;\n      spirit.vy *= 0.99;\n    });\n  }\n  updateParticles() {\n    this.particles = this.particles.filter(particle => {\n      particle.x += particle.vx;\n      particle.y += particle.vy;\n      particle.vy += 0.1;\n      particle.life--;\n      return particle.life > 0;\n    });\n  }\n  render() {\n    this.ctx.fillStyle = 'rgba(0, 20, 40, 0.1)';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.locations.forEach(location => {\n      const taskCount = location.tasks.length;\n      this.ctx.beginPath();\n      this.ctx.arc(location.x, location.y, location.radius, 0, Math.PI * 2);\n      this.ctx.fillStyle = taskCount > 0 ? location.color : '#444';\n      this.ctx.fill();\n      this.ctx.strokeStyle = taskCount > 0 ? '#fff' : '#666';\n      this.ctx.lineWidth = 2;\n      this.ctx.stroke();\n      if (taskCount > 0) {\n        this.ctx.beginPath();\n        this.ctx.arc(location.x + 35, location.y - 35, 15, 0, Math.PI * 2);\n        this.ctx.fillStyle = '#FF6B6B';\n        this.ctx.fill();\n        this.ctx.fillStyle = '#fff';\n        this.ctx.font = 'bold 14px Arial';\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText(taskCount.toString(), location.x + 35, location.y - 30);\n      }\n      this.ctx.fillStyle = taskCount > 0 ? '#fff' : '#999';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText(location.name, location.x, location.y + 5);\n    });\n    this.spirits.forEach(spirit => {\n      const gradient = this.ctx.createRadialGradient(spirit.x, spirit.y, 0, spirit.x, spirit.y, spirit.size + spirit.currentGlow);\n      gradient.addColorStop(0, spirit.color);\n      gradient.addColorStop(1, 'transparent');\n      this.ctx.fillStyle = gradient;\n      this.ctx.beginPath();\n      this.ctx.arc(spirit.x, spirit.y, spirit.size + spirit.currentGlow, 0, Math.PI * 2);\n      this.ctx.fill();\n      this.ctx.fillStyle = spirit.color;\n      this.ctx.beginPath();\n      this.ctx.arc(spirit.x, spirit.y, spirit.size, 0, Math.PI * 2);\n      this.ctx.fill();\n      this.ctx.fillStyle = '#fff';\n      this.ctx.beginPath();\n      this.ctx.arc(spirit.x - 5, spirit.y - 3, 2, 0, Math.PI * 2);\n      this.ctx.arc(spirit.x + 5, spirit.y - 3, 2, 0, Math.PI * 2);\n      this.ctx.fill();\n      this.ctx.strokeStyle = '#fff';\n      this.ctx.lineWidth = 2;\n      this.ctx.beginPath();\n      this.ctx.arc(spirit.x, spirit.y + 3, 4, 0, Math.PI);\n      this.ctx.stroke();\n    });\n    this.particles.forEach(particle => {\n      const alpha = particle.life / particle.maxLife;\n      this.ctx.fillStyle = particle.color + Math.floor(alpha * 255).toString(16).padStart(2, '0');\n      if (particle.text) {\n        this.ctx.font = 'bold 16px Arial';\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText(particle.text, particle.x, particle.y);\n      } else {\n        this.ctx.beginPath();\n        this.ctx.arc(particle.x, particle.y, particle.size * alpha, 0, Math.PI * 2);\n        this.ctx.fill();\n      }\n    });\n    if (this.showTaskModal && this.selectedTask) {\n      this.drawTaskModal();\n    }\n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    this.ctx.fillRect(10, this.canvas.height - 50, this.canvas.width - 20, 40);\n    this.ctx.fillStyle = '#fff';\n    this.ctx.font = '14px Arial';\n    this.ctx.textAlign = 'left';\n    this.ctx.fillText('Click spirits or locations to interact • Red circles show task count • ESC to close modal', 20, this.canvas.height - 25);\n  }\n  drawTaskModal() {\n    var _task$value, _this$teamStats$task$;\n    const task = this.selectedTask;\n    if (!task) return;\n    const modalWidth = 350;\n    const modalHeight = 250;\n    const modalX = (this.canvas.width - modalWidth) / 2;\n    const modalY = (this.canvas.height - modalHeight) / 2;\n\n    // Modal background with gradient\n    const gradient = this.ctx.createLinearGradient(modalX, modalY, modalX, modalY + modalHeight);\n    gradient.addColorStop(0, 'rgba(0, 44, 84, 0.98)');\n    gradient.addColorStop(1, 'rgba(0, 20, 40, 0.98)');\n    this.ctx.fillStyle = gradient;\n    this.ctx.fillRect(modalX, modalY, modalWidth, modalHeight);\n\n    // Modal border with temperature-based color\n    const temp = task.temperature || 0;\n    let borderColor = '#66B2FF';\n    if (temp > 80) borderColor = '#FF6B6B';else if (temp > 60) borderColor = '#FFCC00';\n    this.ctx.strokeStyle = borderColor;\n    this.ctx.lineWidth = 3;\n    this.ctx.strokeRect(modalX, modalY, modalWidth, modalHeight);\n\n    // Task title\n    this.ctx.fillStyle = '#FFCC00';\n    this.ctx.font = 'bold 18px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(task.title, modalX + modalWidth / 2, modalY + 35);\n\n    // Temperature indicator\n    const tempEmoji = temp > 80 ? '🔥' : temp > 60 ? '🌶️' : temp > 40 ? '♨️' : '🫖';\n    this.ctx.fillStyle = '#fff';\n    this.ctx.font = '24px Arial';\n    this.ctx.fillText(tempEmoji, modalX + modalWidth - 40, modalY + 35);\n\n    // Task details\n    this.ctx.fillStyle = '#fff';\n    this.ctx.font = '14px Arial';\n    this.ctx.textAlign = 'left';\n    const details = [`Category: ${task.category}`, `Value: ${((_task$value = task.value) === null || _task$value === void 0 ? void 0 : _task$value.toLocaleString()) || 0}`, `Holder: ${((_this$teamStats$task$ = this.teamStats[task.holder]) === null || _this$teamStats$task$ === void 0 ? void 0 : _this$teamStats$task$.name) || 'Unknown'}`, `Temperature: ${Math.round(temp)}°`, `Time Left: ${task.timeLeft || 0}s`, `Passes: ${task.passCount || 0}`];\n    details.forEach((detail, index) => {\n      this.ctx.fillText(detail, modalX + 20, modalY + 70 + index * 22);\n    });\n\n    // Progress bar for temperature\n    const barWidth = modalWidth - 40;\n    const barHeight = 8;\n    const barX = modalX + 20;\n    const barY = modalY + 200;\n\n    // Background bar\n    this.ctx.fillStyle = '#333';\n    this.ctx.fillRect(barX, barY, barWidth, barHeight);\n\n    // Temperature bar\n    this.ctx.fillStyle = temp > 80 ? '#FF6B6B' : temp > 60 ? '#FFCC00' : '#66B2FF';\n    this.ctx.fillRect(barX, barY, barWidth * temp / 100, barHeight);\n\n    // Action buttons\n    const isMyTask = task.holder === this.currentUser;\n    if (isMyTask) {\n      // Pass button\n      this.ctx.fillStyle = '#FFCC00';\n      this.ctx.fillRect(modalX + 20, modalY + 220, 100, 25);\n      this.ctx.fillStyle = '#000';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText('Pass Task', modalX + 70, modalY + 237);\n\n      // Complete button\n      this.ctx.fillStyle = '#2ECC71';\n      this.ctx.fillRect(modalX + 130, modalY + 220, 100, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.fillText('Complete', modalX + 180, modalY + 237);\n\n      // Close button\n      this.ctx.fillStyle = '#FF6B6B';\n      this.ctx.fillRect(modalX + 240, modalY + 220, 80, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.fillText('Close', modalX + 280, modalY + 237);\n    } else {\n      // Just close button for tasks not owned by current user\n      this.ctx.fillStyle = '#FF6B6B';\n      this.ctx.fillRect(modalX + modalWidth / 2 - 40, modalY + 220, 80, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText('Close', modalX + modalWidth / 2, modalY + 237);\n    }\n\n    // Handle button clicks (add event listener if not already added)\n    if (!this.modalClickHandler) {\n      this.modalClickHandler = event => {\n        if (!this.showTaskModal) return;\n        const rect = this.canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        if (y >= modalY + 220 && y <= modalY + 245) {\n          if (isMyTask) {\n            if (x >= modalX + 20 && x <= modalX + 120) {\n              // Pass button clicked\n              this.onTaskClick(task);\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            } else if (x >= modalX + 130 && x <= modalX + 230) {\n              // Complete button clicked\n              this.onTaskComplete(task);\n              this.showTaskModal = false;\n              this.selectedTask = null;\n              this.updateTaskLocations();\n            } else if (x >= modalX + 240 && x <= modalX + 320) {\n              // Close button clicked\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            }\n          } else {\n            if (x >= modalX + modalWidth / 2 - 40 && x <= modalX + modalWidth / 2 + 40) {\n              // Close button clicked\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            }\n          }\n        }\n      };\n      this.canvas.addEventListener('click', this.modalClickHandler);\n    }\n  }\n  gameLoop() {\n    if (!this.isRunning) return;\n    this.updateSpirits();\n    this.updateParticles();\n    this.updateTaskLocations();\n    this.render();\n    this.animationId = requestAnimationFrame(this.gameLoop);\n  }\n}\nexport default HotPotatoGame;","map":{"version":3,"names":["HotPotatoGame","constructor","canvasId","gameState","updateScore","hotPotatoes","teamStats","currentUser","onTaskClick","onTaskComplete","canvas","document","getElementById","console","error","ctx","getContext","isRunning","animationId","spirits","particles","locations","selectedTask","showTaskModal","initializeLocations","handleClick","bind","handleKeyPress","gameLoop","resizeCanvas","name","x","y","radius","color","tasks","container","parentElement","rect","getBoundingClientRect","width","Math","min","height","start","addEventListener","generateSpirits","updateTaskLocations","stop","cancelAnimationFrame","removeEventListener","clearRect","totalTasks","length","spiritCount","max","floor","i","push","random","vx","vy","size","glow","pulsePhase","PI","id","energy","forEach","loc","task","targetLocation","category","find","l","event","clientX","left","clientY","top","spirit","distance","sqrt","handleSpiritClick","location","handleLocationClick","nearestLocation","minDistance","Infinity","createParticles","key","text","life","maxLife","updateSpirits","currentGlow","sin","dx","dy","force","updateParticles","filter","particle","render","fillStyle","fillRect","taskCount","beginPath","arc","fill","strokeStyle","lineWidth","stroke","font","textAlign","fillText","toString","gradient","createRadialGradient","addColorStop","alpha","padStart","drawTaskModal","_task$value","_this$teamStats$task$","modalWidth","modalHeight","modalX","modalY","createLinearGradient","temp","temperature","borderColor","strokeRect","title","tempEmoji","details","value","toLocaleString","holder","round","timeLeft","passCount","detail","index","barWidth","barHeight","barX","barY","isMyTask","modalClickHandler","requestAnimationFrame"],"sources":["/Users/SUNLAB/hot-potato/frontend/src/game.js"],"sourcesContent":["class HotPotatoGame {\n  constructor(canvasId, gameState, updateScore, hotPotatoes, teamStats, currentUser, onTaskClick, onTaskComplete) {\n    this.canvas = document.getElementById(canvasId);\n    if (!this.canvas) {\n      console.error('Canvas element not found');\n      return;\n    }\n    \n    this.ctx = this.canvas.getContext('2d');\n    this.gameState = gameState;\n    this.updateScore = updateScore;\n    this.hotPotatoes = hotPotatoes;\n    this.teamStats = teamStats;\n    this.currentUser = currentUser;\n    this.onTaskClick = onTaskClick;\n    this.onTaskComplete = onTaskComplete;\n    \n    this.isRunning = false;\n    this.animationId = null;\n    this.spirits = [];\n    this.particles = [];\n    this.locations = [];\n    this.selectedTask = null;\n    this.showTaskModal = false;\n    \n    this.initializeLocations();\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.gameLoop = this.gameLoop.bind(this);\n    this.resizeCanvas();\n  }\n  \n  initializeLocations() {\n    this.locations = [\n      { name: \"Sales Office\", x: 100, y: 100, radius: 60, color: \"#FFCC00\", tasks: [] },\n      { name: \"Customer Service\", x: 300, y: 150, radius: 60, color: \"#66B2FF\", tasks: [] },\n      { name: \"Construction Hub\", x: 500, y: 100, radius: 60, color: \"#9B59B6\", tasks: [] },\n      { name: \"Quality Control\", x: 700, y: 150, radius: 60, color: \"#2ECC71\", tasks: [] },\n      { name: \"Pre-Construction\", x: 200, y: 300, radius: 60, color: \"#FF6B6B\", tasks: [] },\n      { name: \"Admin Center\", x: 600, y: 300, radius: 60, color: \"#4A90E2\", tasks: [] }\n    ];\n  }\n  \n  resizeCanvas() {\n    const container = this.canvas.parentElement;\n    const rect = container.getBoundingClientRect();\n    this.canvas.width = Math.min(800, rect.width - 20);\n    this.canvas.height = 400;\n  }\n  \n  start() {\n    if (this.isRunning) return;\n    this.isRunning = true;\n    this.canvas.addEventListener('click', this.handleClick);\n    document.addEventListener('keydown', this.handleKeyPress);\n    this.generateSpirits();\n    this.updateTaskLocations();\n    this.gameLoop();\n  }\n  \n  stop() {\n    this.isRunning = false;\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n    this.canvas.removeEventListener('click', this.handleClick);\n    document.removeEventListener('keydown', this.handleKeyPress);\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n  \n  generateSpirits() {\n    this.spirits = [];\n    const totalTasks = this.hotPotatoes.length;\n    const spiritCount = Math.min(8, Math.max(3, Math.floor(totalTasks / 2)));\n    \n    for (let i = 0; i < spiritCount; i++) {\n      this.spirits.push({\n        x: Math.random() * (this.canvas.width - 60) + 30,\n        y: Math.random() * (this.canvas.height - 60) + 30,\n        vx: (Math.random() - 0.5) * 2,\n        vy: (Math.random() - 0.5) * 2,\n        size: 15 + Math.random() * 10,\n        color: `hsl(${Math.random() * 360}, 70%, 60%)`,\n        glow: Math.random() * 15 + 10,\n        pulsePhase: Math.random() * Math.PI * 2,\n        id: i,\n        energy: Math.random() * 100 + 50\n      });\n    }\n  }\n  \n  updateTaskLocations() {\n    // Clear existing task assignments\n    this.locations.forEach(loc => loc.tasks = []);\n    \n    // Distribute tasks to locations based on category\n    this.hotPotatoes.forEach(task => {\n      let targetLocation;\n      \n      switch(task.category) {\n        case 'Sales':\n          targetLocation = this.locations.find(l => l.name === \"Sales Office\");\n          break;\n        case 'New Lead':\n        case 'New Customer':\n          targetLocation = this.locations.find(l => l.name === \"Customer Service\");\n          break;\n        case 'Construction':\n          targetLocation = this.locations.find(l => l.name === \"Construction Hub\");\n          break;\n        case 'Post Construction':\n          targetLocation = this.locations.find(l => l.name === \"Quality Control\");\n          break;\n        case 'Pre-Construction':\n          targetLocation = this.locations.find(l => l.name === \"Pre-Construction\");\n          break;\n        default:\n          targetLocation = this.locations.find(l => l.name === \"Admin Center\");\n      }\n      \n      if (targetLocation) {\n        targetLocation.tasks.push(task);\n      }\n    });\n  }\n  \n  handleClick(event) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    \n    for (let spirit of this.spirits) {\n      const distance = Math.sqrt((x - spirit.x) ** 2 + (y - spirit.y) ** 2);\n      if (distance < spirit.size) {\n        this.handleSpiritClick(spirit);\n        return;\n      }\n    }\n    \n    for (let location of this.locations) {\n      const distance = Math.sqrt((x - location.x) ** 2 + (y - location.y) ** 2);\n      if (distance < location.radius && location.tasks.length > 0) {\n        this.handleLocationClick(location);\n        return;\n      }\n    }\n  }\n  \n  handleSpiritClick(spirit) {\n    let nearestLocation = null;\n    let minDistance = Infinity;\n    \n    for (let location of this.locations) {\n      if (location.tasks.length > 0) {\n        const distance = Math.sqrt((spirit.x - location.x) ** 2 + (spirit.y - location.y) ** 2);\n        if (distance < minDistance) {\n          minDistance = distance;\n          nearestLocation = location;\n        }\n      }\n    }\n    \n    if (nearestLocation) {\n      this.handleLocationClick(nearestLocation);\n    }\n    \n    this.updateScore(10);\n    this.createParticles(spirit.x, spirit.y, \"+10\", \"#FFCC00\");\n  }\n  \n  handleLocationClick(location) {\n    if (location.tasks.length === 0) return;\n    \n    const task = location.tasks[0];\n    this.selectedTask = task;\n    this.showTaskModal = true;\n    \n    this.updateScore(25);\n    this.createParticles(location.x, location.y, \"+25\", \"#66B2FF\");\n  }\n  \n  handleKeyPress(event) {\n    if (event.key === 'Escape') {\n      this.showTaskModal = false;\n      this.selectedTask = null;\n    }\n  }\n  \n  createParticles(x, y, text, color) {\n    for (let i = 0; i < 5; i++) {\n      this.particles.push({\n        x: x + (Math.random() - 0.5) * 20,\n        y: y + (Math.random() - 0.5) * 20,\n        vx: (Math.random() - 0.5) * 4,\n        vy: -Math.random() * 3 - 1,\n        life: 60,\n        maxLife: 60,\n        color: color,\n        text: i === 0 ? text : null,\n        size: 4 + Math.random() * 4\n      });\n    }\n  }\n  \n  updateSpirits() {\n    this.spirits.forEach(spirit => {\n      spirit.x += spirit.vx;\n      spirit.y += spirit.vy;\n      \n      if (spirit.x <= spirit.size || spirit.x >= this.canvas.width - spirit.size) {\n        spirit.vx *= -0.8;\n        spirit.x = Math.max(spirit.size, Math.min(this.canvas.width - spirit.size, spirit.x));\n      }\n      if (spirit.y <= spirit.size || spirit.y >= this.canvas.height - spirit.size) {\n        spirit.vy *= -0.8;\n        spirit.y = Math.max(spirit.size, Math.min(this.canvas.height - spirit.size, spirit.y));\n      }\n      \n      spirit.pulsePhase += 0.1;\n      spirit.currentGlow = spirit.glow + Math.sin(spirit.pulsePhase) * 5;\n      \n      for (let location of this.locations) {\n        if (location.tasks.length > 0) {\n          const dx = location.x - spirit.x;\n          const dy = location.y - spirit.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distance > 0 && distance < 150) {\n            const force = 0.02 / distance;\n            spirit.vx += (dx / distance) * force;\n            spirit.vy += (dy / distance) * force;\n          }\n        }\n      }\n      \n      spirit.vx *= 0.99;\n      spirit.vy *= 0.99;\n    });\n  }\n  \n  updateParticles() {\n    this.particles = this.particles.filter(particle => {\n      particle.x += particle.vx;\n      particle.y += particle.vy;\n      particle.vy += 0.1;\n      particle.life--;\n      return particle.life > 0;\n    });\n  }\n  \n  render() {\n    this.ctx.fillStyle = 'rgba(0, 20, 40, 0.1)';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    \n    this.locations.forEach(location => {\n      const taskCount = location.tasks.length;\n      \n      this.ctx.beginPath();\n      this.ctx.arc(location.x, location.y, location.radius, 0, Math.PI * 2);\n      this.ctx.fillStyle = taskCount > 0 ? location.color : '#444';\n      this.ctx.fill();\n      \n      this.ctx.strokeStyle = taskCount > 0 ? '#fff' : '#666';\n      this.ctx.lineWidth = 2;\n      this.ctx.stroke();\n      \n      if (taskCount > 0) {\n        this.ctx.beginPath();\n        this.ctx.arc(location.x + 35, location.y - 35, 15, 0, Math.PI * 2);\n        this.ctx.fillStyle = '#FF6B6B';\n        this.ctx.fill();\n        \n        this.ctx.fillStyle = '#fff';\n        this.ctx.font = 'bold 14px Arial';\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText(taskCount.toString(), location.x + 35, location.y - 30);\n      }\n      \n      this.ctx.fillStyle = taskCount > 0 ? '#fff' : '#999';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText(location.name, location.x, location.y + 5);\n    });\n    \n    this.spirits.forEach(spirit => {\n      const gradient = this.ctx.createRadialGradient(\n        spirit.x, spirit.y, 0,\n        spirit.x, spirit.y, spirit.size + spirit.currentGlow\n      );\n      gradient.addColorStop(0, spirit.color);\n      gradient.addColorStop(1, 'transparent');\n      \n      this.ctx.fillStyle = gradient;\n      this.ctx.beginPath();\n      this.ctx.arc(spirit.x, spirit.y, spirit.size + spirit.currentGlow, 0, Math.PI * 2);\n      this.ctx.fill();\n      \n      this.ctx.fillStyle = spirit.color;\n      this.ctx.beginPath();\n      this.ctx.arc(spirit.x, spirit.y, spirit.size, 0, Math.PI * 2);\n      this.ctx.fill();\n      \n      this.ctx.fillStyle = '#fff';\n      this.ctx.beginPath();\n      this.ctx.arc(spirit.x - 5, spirit.y - 3, 2, 0, Math.PI * 2);\n      this.ctx.arc(spirit.x + 5, spirit.y - 3, 2, 0, Math.PI * 2);\n      this.ctx.fill();\n      \n      this.ctx.strokeStyle = '#fff';\n      this.ctx.lineWidth = 2;\n      this.ctx.beginPath();\n      this.ctx.arc(spirit.x, spirit.y + 3, 4, 0, Math.PI);\n      this.ctx.stroke();\n    });\n    \n    this.particles.forEach(particle => {\n      const alpha = particle.life / particle.maxLife;\n      this.ctx.fillStyle = particle.color + Math.floor(alpha * 255).toString(16).padStart(2, '0');\n      \n      if (particle.text) {\n        this.ctx.font = 'bold 16px Arial';\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText(particle.text, particle.x, particle.y);\n      } else {\n        this.ctx.beginPath();\n        this.ctx.arc(particle.x, particle.y, particle.size * alpha, 0, Math.PI * 2);\n        this.ctx.fill();\n      }\n    });\n    \n    if (this.showTaskModal && this.selectedTask) {\n      this.drawTaskModal();\n    }\n    \n    this.ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n    this.ctx.fillRect(10, this.canvas.height - 50, this.canvas.width - 20, 40);\n    \n    this.ctx.fillStyle = '#fff';\n    this.ctx.font = '14px Arial';\n    this.ctx.textAlign = 'left';\n    this.ctx.fillText('Click spirits or locations to interact • Red circles show task count • ESC to close modal', 20, this.canvas.height - 25);\n  }\n  \n  drawTaskModal() {\n    const task = this.selectedTask;\n    if (!task) return;\n    \n    const modalWidth = 350;\n    const modalHeight = 250;\n    const modalX = (this.canvas.width - modalWidth) / 2;\n    const modalY = (this.canvas.height - modalHeight) / 2;\n    \n    // Modal background with gradient\n    const gradient = this.ctx.createLinearGradient(modalX, modalY, modalX, modalY + modalHeight);\n    gradient.addColorStop(0, 'rgba(0, 44, 84, 0.98)');\n    gradient.addColorStop(1, 'rgba(0, 20, 40, 0.98)');\n    this.ctx.fillStyle = gradient;\n    this.ctx.fillRect(modalX, modalY, modalWidth, modalHeight);\n    \n    // Modal border with temperature-based color\n    const temp = task.temperature || 0;\n    let borderColor = '#66B2FF';\n    if (temp > 80) borderColor = '#FF6B6B';\n    else if (temp > 60) borderColor = '#FFCC00';\n    \n    this.ctx.strokeStyle = borderColor;\n    this.ctx.lineWidth = 3;\n    this.ctx.strokeRect(modalX, modalY, modalWidth, modalHeight);\n    \n    // Task title\n    this.ctx.fillStyle = '#FFCC00';\n    this.ctx.font = 'bold 18px Arial';\n    this.ctx.textAlign = 'center';\n    this.ctx.fillText(task.title, modalX + modalWidth / 2, modalY + 35);\n    \n    // Temperature indicator\n    const tempEmoji = temp > 80 ? '🔥' : temp > 60 ? '🌶️' : temp > 40 ? '♨️' : '🫖';\n    this.ctx.fillStyle = '#fff';\n    this.ctx.font = '24px Arial';\n    this.ctx.fillText(tempEmoji, modalX + modalWidth - 40, modalY + 35);\n    \n    // Task details\n    this.ctx.fillStyle = '#fff';\n    this.ctx.font = '14px Arial';\n    this.ctx.textAlign = 'left';\n    \n    const details = [\n      `Category: ${task.category}`,\n      `Value: ${task.value?.toLocaleString() || 0}`,\n      `Holder: ${this.teamStats[task.holder]?.name || 'Unknown'}`,\n      `Temperature: ${Math.round(temp)}°`,\n      `Time Left: ${task.timeLeft || 0}s`,\n      `Passes: ${task.passCount || 0}`\n    ];\n    \n    details.forEach((detail, index) => {\n      this.ctx.fillText(detail, modalX + 20, modalY + 70 + index * 22);\n    });\n    \n    // Progress bar for temperature\n    const barWidth = modalWidth - 40;\n    const barHeight = 8;\n    const barX = modalX + 20;\n    const barY = modalY + 200;\n    \n    // Background bar\n    this.ctx.fillStyle = '#333';\n    this.ctx.fillRect(barX, barY, barWidth, barHeight);\n    \n    // Temperature bar\n    this.ctx.fillStyle = temp > 80 ? '#FF6B6B' : temp > 60 ? '#FFCC00' : '#66B2FF';\n    this.ctx.fillRect(barX, barY, (barWidth * temp) / 100, barHeight);\n    \n    // Action buttons\n    const isMyTask = task.holder === this.currentUser;\n    \n    if (isMyTask) {\n      // Pass button\n      this.ctx.fillStyle = '#FFCC00';\n      this.ctx.fillRect(modalX + 20, modalY + 220, 100, 25);\n      this.ctx.fillStyle = '#000';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText('Pass Task', modalX + 70, modalY + 237);\n      \n      // Complete button\n      this.ctx.fillStyle = '#2ECC71';\n      this.ctx.fillRect(modalX + 130, modalY + 220, 100, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.fillText('Complete', modalX + 180, modalY + 237);\n      \n      // Close button\n      this.ctx.fillStyle = '#FF6B6B';\n      this.ctx.fillRect(modalX + 240, modalY + 220, 80, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.fillText('Close', modalX + 280, modalY + 237);\n    } else {\n      // Just close button for tasks not owned by current user\n      this.ctx.fillStyle = '#FF6B6B';\n      this.ctx.fillRect(modalX + modalWidth/2 - 40, modalY + 220, 80, 25);\n      this.ctx.fillStyle = '#fff';\n      this.ctx.font = 'bold 12px Arial';\n      this.ctx.textAlign = 'center';\n      this.ctx.fillText('Close', modalX + modalWidth/2, modalY + 237);\n    }\n    \n    // Handle button clicks (add event listener if not already added)\n    if (!this.modalClickHandler) {\n      this.modalClickHandler = (event) => {\n        if (!this.showTaskModal) return;\n        \n        const rect = this.canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        \n        if (y >= modalY + 220 && y <= modalY + 245) {\n          if (isMyTask) {\n            if (x >= modalX + 20 && x <= modalX + 120) {\n              // Pass button clicked\n              this.onTaskClick(task);\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            } else if (x >= modalX + 130 && x <= modalX + 230) {\n              // Complete button clicked\n              this.onTaskComplete(task);\n              this.showTaskModal = false;\n              this.selectedTask = null;\n              this.updateTaskLocations();\n            } else if (x >= modalX + 240 && x <= modalX + 320) {\n              // Close button clicked\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            }\n          } else {\n            if (x >= modalX + modalWidth/2 - 40 && x <= modalX + modalWidth/2 + 40) {\n              // Close button clicked\n              this.showTaskModal = false;\n              this.selectedTask = null;\n            }\n          }\n        }\n      };\n      this.canvas.addEventListener('click', this.modalClickHandler);\n    }\n  }\n  \n  gameLoop() {\n    if (!this.isRunning) return;\n    \n    this.updateSpirits();\n    this.updateParticles();\n    this.updateTaskLocations();\n    this.render();\n    \n    this.animationId = requestAnimationFrame(this.gameLoop);\n  }\n}\n\nexport default HotPotatoGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}